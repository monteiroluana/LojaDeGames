package br.com.lojaGame.ui.venda;

import br.com.lojaGame.exceptions.VendasException;
import br.com.lojaGame.models.ItemCart;
import br.com.lojaGame.models.Venda;
import br.com.lojaGame.services.ServicoVenda;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class FormRelatorioVendas extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormRelatorioVendas
     */
    public FormRelatorioVendas() {
        initComponents();
        
        //faz com que a coluna do ID não seja mostrada ao usuário
        tableRelatorio.getColumnModel().getColumn(0).setMinWidth(0);
        tableRelatorio.getColumnModel().getColumn(0).setMaxWidth(0);
        tableRelatorio.getColumnModel().getColumn(0).setWidth(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDataInicial = new javax.swing.JLabel();
        fTxtDataInicial = new javax.swing.JFormattedTextField();
        lblDataFinal = new javax.swing.JLabel();
        fTxtDataFinal = new javax.swing.JFormattedTextField();
        buttonGerarRelat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRelatorio = new javax.swing.JTable();
        lblTotal = new javax.swing.JLabel();
        buttonCancelar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Relatório de Vendas");

        lblDataInicial.setText("Data Inicial");

        try {
            fTxtDataInicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fTxtDataInicial.setToolTipText("dd/MM/yyyy");

        lblDataFinal.setText("Data Final");

        try {
            fTxtDataFinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fTxtDataFinal.setToolTipText("dd/MM/yyyy");

        buttonGerarRelat.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        buttonGerarRelat.setText("Gerar Relatório");
        buttonGerarRelat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGerarRelatActionPerformed(evt);
            }
        });

        tableRelatorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Venda", "Data", "Cliente", "Produto", "Plataforma", "Qntd.", "Preço Unit.", "Unit. x Qntd", "Valor Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableRelatorio);

        lblTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTotal.setText("Total: R$");

        buttonCancelar.setText("Cancelar");
        buttonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDataInicial)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fTxtDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblDataFinal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fTxtDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonGerarRelat)
                        .addContainerGap(212, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(buttonCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTotal)
                        .addGap(125, 125, 125))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataInicial)
                    .addComponent(fTxtDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDataFinal)
                    .addComponent(fTxtDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonGerarRelat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTotal)
                    .addComponent(buttonCancelar))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonCancelarActionPerformed

    private void buttonGerarRelatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGerarRelatActionPerformed
        boolean resultSearch = false;

        try {
            //Solicita a atualização da lista com o novo critério
            resultSearch = refreshList();

        } catch (Exception e) {
            //Exibe mensagens de erro na fonte de dados e para o listener
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),
                    "Falha ao obter o relatório", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Exibe mensagem de erro caso a pesquisa não tenha resultados
        if (!resultSearch) {
            JOptionPane.showMessageDialog(rootPane, "A pesquisa não retornou resultados ",
                    "Sem resultados", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_buttonGerarRelatActionPerformed

    public boolean refreshList() throws VendasException, Exception {

        List<Venda> resultado = ServicoVenda.procurarVenda((Date) fTxtDataInicial.getValue(), (Date) fTxtDataFinal.getValue());

        DefaultTableModel model = (DefaultTableModel) tableRelatorio.getModel();
        //Indica que a tabela deve excluir todos seus elementos
        //Isto limpará a lista, mesmo que a pesquisa não tenha sucesso
        model.setRowCount(0);

        if (resultado == null || resultado.size() <= 0) {
            return false;
        }

        //Percorre a lista de resultados e os adiciona na tabela
        float total = 0.0f;

        int agrupaVenda = -1;

        for (int i = 0; i < resultado.size(); i++) {
            Venda venda = resultado.get(i);

            if (venda != null) {
                List<ItemCart> itensCart = venda.getCart();

                //ItemCart itemCart = null;
                for (int j = 0; j < itensCart.size(); j++) {
                    ItemCart itemCart = itensCart.get(j);

                    //agrupar a venda e não mostrar dados repetidos na tabela
                    if (agrupaVenda == venda.getIdVenda()) {
                        Object[] row = new Object[9];
                        row[0] = null;
                        row[1] = null;
                        row[2] = null;
                        row[3] = itemCart.getNomeProd();
                        row[4] = itemCart.getPlataforma();
                        row[5] = itemCart.getQntdCompra();
                        row[6] = itemCart.getPrecoUnit();
                        row[7] = itemCart.getValor();
                        row[8] = null;
                        model.addRow(row);

                    } else {
                        Object[] row = new Object[8];
                        row[0] = venda.getIdVenda();
                        row[1] = venda.getData();
                        row[2] = venda.getNomeCliente();
                        row[3] = itemCart.getNomeProd();
                        row[4] = itemCart.getPlataforma();
                        row[5] = itemCart.getQntdCompra();
                        row[6] = itemCart.getPrecoUnit();
                        row[7] = itemCart.getValor();
                        row[8] = venda.getValorTotal();
                        model.addRow(row);

                        //Guardando o total do relatório
                        total += venda.getValorTotal();
                    }

                    agrupaVenda = venda.getIdVenda();
                }
            }
        }

        lblTotal.setText("Total: R$ " + total);

        //Se chegamos até aqui, a pesquisa teve sucesso, então
        //retornamos "true" para o elemento acionante, indicando
        //que não devem ser exibidas mensagens de erro
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancelar;
    private javax.swing.JButton buttonGerarRelat;
    private javax.swing.JFormattedTextField fTxtDataFinal;
    private javax.swing.JFormattedTextField fTxtDataInicial;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDataFinal;
    private javax.swing.JLabel lblDataInicial;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tableRelatorio;
    // End of variables declaration//GEN-END:variables
}
