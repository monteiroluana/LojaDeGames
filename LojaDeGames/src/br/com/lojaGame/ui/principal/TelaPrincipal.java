/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//cria JInternalFrame pra poder aparecer a "janela" dentro
package br.com.lojaGame.ui.principal;

import br.com.lojaGame.ui.cliente.FormCadastrarCliente;
import br.com.lojaGame.ui.cliente.FormConsultarClientes;
import br.com.lojaGame.ui.cliente.FormEditarCliente;
import br.com.lojaGame.ui.produto.FormCadastrarJogo;
import br.com.lojaGame.ui.produto.FormConsultarJogo;
import br.com.lojaGame.ui.produto.FormEditarJogo;
import br.com.lojaGame.ui.venda.FormRelatorioVendas;
import br.com.lojaGame.ui.venda.FormVenda;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.JInternalFrame;

/**
 *
 * @author ffreire
 */
public class TelaPrincipal extends javax.swing.JFrame {

    FormCadastrarCliente cadastrarCliente = null;
    FormConsultarClientes consultarClientes = null;
    FormEditarCliente editarCliente = null;
    FormCadastrarJogo cadastrarQuarto = null;
    FormConsultarJogo consultarQuartos = null;
    FormEditarJogo editarJogo = null;
    FormRelatorioVendas relatorioVendas = null;
    FormVenda carrinhoVenda = null;

    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktop = new javax.swing.JDesktopPane() {
            private Image image;
            {
                try {
                    image = ImageIO.read(new File("src/resources/ornitorrinco-00b.jpg"));
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }

            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
            }
        };
        menuBarPrincipal = new javax.swing.JMenuBar();
        menuCliente = new javax.swing.JMenu();
        itemCadastrarCliente = new javax.swing.JMenuItem();
        itemConsultarCliente = new javax.swing.JMenuItem();
        itemEditarCliente = new javax.swing.JMenuItem();
        menuProduto = new javax.swing.JMenu();
        itemCadastrarProduto = new javax.swing.JMenuItem();
        itemConsultarProduto = new javax.swing.JMenuItem();
        itemEditarJogo = new javax.swing.JMenuItem();
        menuVenda = new javax.swing.JMenu();
        menuCarrinho = new javax.swing.JMenuItem();
        menuRelatorio = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lojinha de vijo Gueime");

        desktop.setDoubleBuffered(true);
        desktop.setPreferredSize(new java.awt.Dimension(1200, 800));

        javax.swing.GroupLayout desktopLayout = new javax.swing.GroupLayout(desktop);
        desktop.setLayout(desktopLayout);
        desktopLayout.setHorizontalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1201, Short.MAX_VALUE)
        );
        desktopLayout.setVerticalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 973, Short.MAX_VALUE)
        );

        menuCliente.setText("Cliente");

        itemCadastrarCliente.setText("Cadastrar Cliente");
        itemCadastrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCadastrarClienteActionPerformed(evt);
            }
        });
        menuCliente.add(itemCadastrarCliente);

        itemConsultarCliente.setText("Consultar Clientes");
        itemConsultarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConsultarClienteActionPerformed(evt);
            }
        });
        menuCliente.add(itemConsultarCliente);

        itemEditarCliente.setText("Editar Cliente");
        itemEditarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemEditarClienteActionPerformed(evt);
            }
        });
        menuCliente.add(itemEditarCliente);

        menuBarPrincipal.add(menuCliente);

        menuProduto.setText("Produto");

        itemCadastrarProduto.setText("Cadastrar Produto");
        itemCadastrarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCadastrarProdutoActionPerformed(evt);
            }
        });
        menuProduto.add(itemCadastrarProduto);

        itemConsultarProduto.setText("Consultar Produtos");
        itemConsultarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConsultarProdutoActionPerformed(evt);
            }
        });
        menuProduto.add(itemConsultarProduto);

        itemEditarJogo.setText("Editar Jogo");
        itemEditarJogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemEditarJogoActionPerformed(evt);
            }
        });
        menuProduto.add(itemEditarJogo);

        menuBarPrincipal.add(menuProduto);

        menuVenda.setText("Venda");

        menuCarrinho.setText("Carrinho");
        menuCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCarrinhoActionPerformed(evt);
            }
        });
        menuVenda.add(menuCarrinho);

        menuRelatorio.setText("Relat√≥rio de Vendas");
        menuRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuRelatorioActionPerformed(evt);
            }
        });
        menuVenda.add(menuRelatorio);

        menuBarPrincipal.add(menuVenda);

        setJMenuBar(menuBarPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop, javax.swing.GroupLayout.DEFAULT_SIZE, 1201, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop, javax.swing.GroupLayout.DEFAULT_SIZE, 973, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemCadastrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCadastrarClienteActionPerformed
        if (cadastrarCliente == null || !cadastrarCliente.isDisplayable()) {
            cadastrarCliente = new FormCadastrarCliente();
            desktop.add(cadastrarCliente);
            //centraliza
            this.openFrameInCenter(cadastrarCliente);
        }
        cadastrarCliente.toFront();
    }//GEN-LAST:event_itemCadastrarClienteActionPerformed

    private void itemConsultarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConsultarClienteActionPerformed
        if (consultarClientes == null || !consultarClientes.isDisplayable()) {
            consultarClientes = new FormConsultarClientes();
            desktop.add(consultarClientes);
            this.openFrameInCenter(consultarClientes);
        }
        consultarClientes.toFront();
    }//GEN-LAST:event_itemConsultarClienteActionPerformed

    private void itemCadastrarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCadastrarProdutoActionPerformed
        if (cadastrarQuarto == null || !cadastrarQuarto.isDisplayable()) {
            cadastrarQuarto = new FormCadastrarJogo();
            desktop.add(cadastrarQuarto);
            this.openFrameInCenter(cadastrarQuarto);
        }
        cadastrarQuarto.toFront();
    }//GEN-LAST:event_itemCadastrarProdutoActionPerformed

    private void itemConsultarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConsultarProdutoActionPerformed
        if (consultarQuartos == null || !consultarQuartos.isDisplayable()) {
            consultarQuartos = new FormConsultarJogo();
            desktop.add(consultarQuartos);
            this.openFrameInCenter(consultarQuartos);
        }
        consultarQuartos.toFront();
    }//GEN-LAST:event_itemConsultarProdutoActionPerformed

    private void menuCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCarrinhoActionPerformed
        if (carrinhoVenda == null || !carrinhoVenda.isDisplayable()) {
            carrinhoVenda = new FormVenda();
            desktop.add(carrinhoVenda);
            this.openFrameInCenter(carrinhoVenda);
        }
        carrinhoVenda.toFront();
    }//GEN-LAST:event_menuCarrinhoActionPerformed

    private void menuRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuRelatorioActionPerformed
        if (relatorioVendas == null || !relatorioVendas.isDisplayable()) {
            relatorioVendas = new FormRelatorioVendas();
            desktop.add(relatorioVendas);
            this.openFrameInCenter(relatorioVendas);
        }
        carrinhoVenda.toFront();
    }//GEN-LAST:event_menuRelatorioActionPerformed

    private void itemEditarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemEditarClienteActionPerformed
        if (editarCliente == null || !editarCliente.isDisplayable()) {
            editarCliente = new FormEditarCliente();
            desktop.add(editarCliente);
            this.openFrameInCenter(editarCliente);
        }
        editarCliente.toFront();
    }//GEN-LAST:event_itemEditarClienteActionPerformed

    private void itemEditarJogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemEditarJogoActionPerformed
        if (editarJogo == null || !editarJogo.isDisplayable()) {
            editarJogo = new FormEditarJogo();
            desktop.add(editarJogo);
            this.openFrameInCenter(editarJogo);
        }
        editarJogo.toFront();
    }//GEN-LAST:event_itemEditarJogoActionPerformed

    //Abre um internal frame centralizado na tela
    public void openFrameInCenter(JInternalFrame jif) {
        Dimension desktopSize = desktop.getSize();
        Dimension jInternalFrameSize = jif.getSize();
        int width = (desktopSize.width - jInternalFrameSize.width) / 2;
        int height = (desktopSize.height - jInternalFrameSize.height) / 2;
        jif.setLocation(width, height);
        jif.setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane desktop;
    private javax.swing.JMenuItem itemCadastrarCliente;
    private javax.swing.JMenuItem itemCadastrarProduto;
    private javax.swing.JMenuItem itemConsultarCliente;
    private javax.swing.JMenuItem itemConsultarProduto;
    private javax.swing.JMenuItem itemEditarCliente;
    private javax.swing.JMenuItem itemEditarJogo;
    private javax.swing.JMenuBar menuBarPrincipal;
    private javax.swing.JMenuItem menuCarrinho;
    private javax.swing.JMenu menuCliente;
    private javax.swing.JMenu menuProduto;
    private javax.swing.JMenuItem menuRelatorio;
    private javax.swing.JMenu menuVenda;
    // End of variables declaration//GEN-END:variables
}
